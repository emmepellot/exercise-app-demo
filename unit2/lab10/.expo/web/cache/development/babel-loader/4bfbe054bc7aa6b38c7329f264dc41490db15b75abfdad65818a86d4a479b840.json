{"ast":null,"code":"var _jsxFileName = \"/Users/emme/Documents/Lab 9 React/exercise-app-demo/unit2/lab10/src/App.js\";\nimport React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport Question from './components/Questions';\nimport Summary from './components/Summary';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar Stack = createStackNavigator();\nvar questions = [{\n  prompt: \"True or false: Oranges are orange\",\n  type: \"true-false\",\n  choices: [\"True\", \"False\"],\n  correct: 0\n}, {\n  prompt: \"Which is NOT a color in the rainbow\",\n  type: \"multiple-choice\",\n  choices: [\"Red\", \"Silver\", \"Blue\"],\n  correct: 1\n}, {\n  prompt: \"Choose which of the following are mammals\",\n  type: \"multiple-answer\",\n  choices: [\"Dog\", \"Frog\", \"Elephant\"],\n  correct: [0, 2]\n}];\nexport default function App() {\n  return _jsxDEV(NavigationContainer, {\n    children: _jsxDEV(Stack.Navigator, {\n      initialRouteName: \"Question\",\n      children: [_jsxDEV(Stack.Screen, {\n        name: \"Question\",\n        component: Question,\n        initialParams: {\n          questions: questions\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), _jsxDEV(Stack.Screen, {\n        name: \"Summary\",\n        component: Summary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"names":["React","NavigationContainer","createStackNavigator","Question","Summary","jsxDEV","_jsxDEV","Stack","questions","prompt","type","choices","correct","App","children","Navigator","initialRouteName","Screen","name","component","initialParams","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/emme/Documents/Lab 9 React/exercise-app-demo/unit2/lab10/src/App.js"],"sourcesContent":["import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport Question from './components/Questions'; // Ensure correct import path\nimport Summary from './components/Summary';\n\nconst Stack = createStackNavigator();\n\nconst questions = [\n  {\n    prompt: \"True or false: Oranges are orange\",\n    type: \"true-false\",\n    choices: [\"True\", \"False\"],\n    correct: 0 // The correct answer is \"True\"\n  },\n  {\n    prompt: \"Which is NOT a color in the rainbow\",\n    type: \"multiple-choice\",\n    choices: [\"Red\", \"Silver\", \"Blue\"],\n    correct: 1 // The correct answer is \"Choice 2\"\n  },\n  {\n    prompt: \"Choose which of the following are mammals\",\n    type: \"multiple-answer\",\n    choices: [\"Dog\", \"Frog\", \"Elephant\"],\n    correct: [0, 2] // The correct answers are \"Choice 1\" and \"Choice 3\"\n  }\n];\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator initialRouteName=\"Question\">\n        <Stack.Screen \n          name=\"Question\" \n          component={Question} \n          initialParams={{ questions }} // Pass questions as initialParams\n        />\n        <Stack.Screen name=\"Summary\" component={Summary} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,oBAAoB,QAAQ,yBAAyB;AAC9D,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,OAAO,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,IAAMC,KAAK,GAAGL,oBAAoB,CAAC,CAAC;AAEpC,IAAMM,SAAS,GAAG,CAChB;EACEC,MAAM,EAAE,mCAAmC;EAC3CC,IAAI,EAAE,YAAY;EAClBC,OAAO,EAAE,CAAC,MAAM,EAAE,OAAO,CAAC;EAC1BC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,MAAM,EAAE,qCAAqC;EAC7CC,IAAI,EAAE,iBAAiB;EACvBC,OAAO,EAAE,CAAC,KAAK,EAAE,QAAQ,EAAE,MAAM,CAAC;EAClCC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,MAAM,EAAE,2CAA2C;EACnDC,IAAI,EAAE,iBAAiB;EACvBC,OAAO,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,UAAU,CAAC;EACpCC,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC;AAChB,CAAC,CACF;AAED,eAAe,SAASC,GAAGA,CAAA,EAAG;EAC5B,OACEP,OAAA,CAACL,mBAAmB;IAAAa,QAAA,EAClBR,OAAA,CAACC,KAAK,CAACQ,SAAS;MAACC,gBAAgB,EAAC,UAAU;MAAAF,QAAA,GAC1CR,OAAA,CAACC,KAAK,CAACU,MAAM;QACXC,IAAI,EAAC,UAAU;QACfC,SAAS,EAAEhB,QAAS;QACpBiB,aAAa,EAAE;UAAEZ,SAAS,EAATA;QAAU;MAAE;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CAAC,EACFlB,OAAA,CAACC,KAAK,CAACU,MAAM;QAACC,IAAI,EAAC,SAAS;QAACC,SAAS,EAAEf;MAAQ;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAE1B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}