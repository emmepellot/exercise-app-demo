{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/emme/Documents/Lab 9 React/exercise-app-demo/unit2/lab10/src/components/Questions.js\",\n  _this = this;\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar Question = function Question(_ref) {\n  var _questions$currentInd, _questions$currentInd2;\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  var questions = route.params.questions;\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentIndex = _useState2[0],\n    setCurrentIndex = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedAnswer = _useState4[0],\n    setSelectedAnswer = _useState4[1];\n  var handleNextQuestion = function handleNextQuestion() {\n    if (currentIndex < questions.length - 1) {\n      setCurrentIndex(currentIndex + 1);\n      setSelectedAnswer(null);\n    } else {\n      navigation.navigate('Summary', {\n        questions: questions,\n        selectedAnswer: selectedAnswer\n      });\n    }\n  };\n  var handleAnswerSelection = function handleAnswerSelection(selectedIndex) {\n    setSelectedAnswer(selectedIndex);\n  };\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(Text, {\n      style: styles.prompt,\n      children: (_questions$currentInd = questions[currentIndex]) == null ? void 0 : _questions$currentInd.prompt\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, _this), (_questions$currentInd2 = questions[currentIndex]) == null ? void 0 : _questions$currentInd2.choices.map(function (choice, index) {\n      return _jsxDEV(Button, {\n        title: choice,\n        onPress: function onPress() {\n          return handleAnswerSelection(index);\n        },\n        style: selectedAnswer === index ? styles.selectedButton : null\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, _this);\n    }), _jsxDEV(Button, {\n      title: \"Next Question\",\n      onPress: handleNextQuestion\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, _this);\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20\n  },\n  prompt: {\n    marginBottom: 20,\n    textAlign: 'center'\n  },\n  selectedButton: {\n    backgroundColor: '#007bff'\n  }\n});\nexport default Question;","map":{"version":3,"names":["React","useState","View","Text","Button","StyleSheet","jsxDEV","_jsxDEV","Question","_ref","_questions$currentInd","_questions$currentInd2","route","navigation","questions","params","_useState","_useState2","_slicedToArray","currentIndex","setCurrentIndex","_useState3","_useState4","selectedAnswer","setSelectedAnswer","handleNextQuestion","length","navigate","handleAnswerSelection","selectedIndex","style","styles","container","children","prompt","fileName","_jsxFileName","lineNumber","columnNumber","_this","choices","map","choice","index","title","onPress","selectedButton","create","flex","justifyContent","alignItems","padding","marginBottom","textAlign","backgroundColor"],"sources":["/Users/emme/Documents/Lab 9 React/exercise-app-demo/unit2/lab10/src/components/Questions.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, Button, StyleSheet } from 'react-native';\n\nconst Question = ({ route, navigation }) => {\n  const { questions } = route.params;\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [selectedAnswer, setSelectedAnswer] = useState(null); // State to store the selected answer\n\n  const handleNextQuestion = () => {\n    if (currentIndex < questions.length - 1) {\n      setCurrentIndex(currentIndex + 1);\n      setSelectedAnswer(null); // Reset selected answer when moving to the next question\n    } else {\n      navigation.navigate('Summary', { questions, selectedAnswer }); // Pass selectedAnswer to Summary component\n    }\n  };\n\n  const handleAnswerSelection = (selectedIndex) => {\n    setSelectedAnswer(selectedIndex);\n};\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.prompt}>{questions[currentIndex]?.prompt}</Text>\n      {questions[currentIndex]?.choices.map((choice, index) => (\n        <Button\n          key={index}\n          title={choice}\n          onPress={() => handleAnswerSelection(index)}\n          style={selectedAnswer === index ? styles.selectedButton : null}\n        />\n      ))}\n      <Button\n        title=\"Next Question\"\n        onPress={handleNextQuestion}\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n  },\n  prompt: {\n    marginBottom: 20,\n    textAlign: 'center',\n  },\n  selectedButton: {\n    backgroundColor: '#007bff',\n  },\n});\n\nexport default Question;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}