{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/emme/Documents/Lab 9 React/exercise-app-demo/unit2/lab10/src/components/Questions.js\",\n  _this = this;\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { ButtonGroup } from 'react-native-elements';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar Questions = function Questions(_ref) {\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  var questions = route.params.questions;\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentIndex = _useState2[0],\n    setCurrentIndex = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedAnswer = _useState4[0],\n    setSelectedAnswer = _useState4[1];\n  var handleNextQuestion = function handleNextQuestion() {\n    if (currentIndex < questions.length - 1) {\n      setCurrentIndex(currentIndex + 1);\n      setSelectedAnswer(null);\n    } else {\n      navigation.navigate('Summary', {\n        questions: questions\n      });\n    }\n  };\n  var handleAnswerSelection = function handleAnswerSelection(selectedIndex) {\n    setSelectedAnswer(selectedIndex);\n  };\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(Text, {\n      style: styles.prompt,\n      children: questions[currentIndex].prompt\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, _this), _jsxDEV(ButtonGroup, {\n      onPress: handleAnswerSelection,\n      selectedIndex: selectedAnswer,\n      buttons: questions[currentIndex].choices,\n      containerStyle: styles.choicesContainer,\n      selectedButtonStyle: styles.selectedButton,\n      testID: \"choices\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, _this), _jsxDEV(Button, {\n      title: \"Next Question\",\n      onPress: handleNextQuestion,\n      testID: \"next-question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, _this);\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20\n  },\n  prompt: {\n    marginBottom: 20,\n    textAlign: 'center'\n  },\n  choicesContainer: {\n    width: '80%',\n    marginBottom: 20\n  },\n  selectedButton: {\n    backgroundColor: '#007bff'\n  }\n});\nexport default Questions;","map":{"version":3,"names":["React","useState","View","Text","Button","StyleSheet","ButtonGroup","jsxDEV","_jsxDEV","Questions","_ref","route","navigation","questions","params","_useState","_useState2","_slicedToArray","currentIndex","setCurrentIndex","_useState3","_useState4","selectedAnswer","setSelectedAnswer","handleNextQuestion","length","navigate","handleAnswerSelection","selectedIndex","style","styles","container","children","prompt","fileName","_jsxFileName","lineNumber","columnNumber","_this","onPress","buttons","choices","containerStyle","choicesContainer","selectedButtonStyle","selectedButton","testID","title","create","flex","justifyContent","alignItems","padding","marginBottom","textAlign","width","backgroundColor"],"sources":["/Users/emme/Documents/Lab 9 React/exercise-app-demo/unit2/lab10/src/components/Questions.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, Button, StyleSheet } from 'react-native';\nimport { ButtonGroup } from 'react-native-elements';\n\nconst Questions = ({ route, navigation }) => {\n  const { questions } = route.params;\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n\n  const handleNextQuestion = () => {\n    if (currentIndex < questions.length - 1) {\n      setCurrentIndex(currentIndex + 1);\n      setSelectedAnswer(null);\n    } else {\n      navigation.navigate('Summary', { questions });\n    }\n  };\n\n  const handleAnswerSelection = (selectedIndex) => {\n    setSelectedAnswer(selectedIndex);\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.prompt}>{questions[currentIndex].prompt}</Text>\n      <ButtonGroup\n        onPress={handleAnswerSelection}\n        selectedIndex={selectedAnswer}\n        buttons={questions[currentIndex].choices}\n        containerStyle={styles.choicesContainer}\n        selectedButtonStyle={styles.selectedButton}\n        testID=\"choices\"\n      />\n      <Button\n        title=\"Next Question\"\n        onPress={handleNextQuestion}\n        testID=\"next-question\"\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n  },\n  prompt: {\n    marginBottom: 20,\n    textAlign: 'center',\n  },\n  choicesContainer: {\n    width: '80%',\n    marginBottom: 20,\n  },\n  selectedButton: {\n    backgroundColor: '#007bff',\n  },\n});\n\nexport default Questions;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}