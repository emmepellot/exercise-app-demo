{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/Users/emme/Documents/Lab 9 React/exercise-app-demo/unit2/lab10/src/App.js\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport Question from './components/Questions';\nimport Summary from './components/Summary';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar Stack = createStackNavigator();\nvar questions = [{\n  prompt: \"This is the first question...\",\n  type: \"true-false\",\n  choices: [\"True\", \"False\"],\n  correct: 0\n}, {\n  prompt: \"This is the second question...\",\n  type: \"multiple-choice\",\n  choices: [\"Choice 1\", \"Choice 2\", \"Choice 3\"],\n  correct: 1\n}, {\n  prompt: \"This is the third question...\",\n  type: \"multiple-answer\",\n  choices: [\"Choice 1\", \"Choice 2\", \"Choice 3\"],\n  correct: [0, 2]\n}];\nexport default function App() {\n  var _this = this;\n  return _jsxDEV(NavigationContainer, {\n    children: _jsxDEV(Stack.Navigator, {\n      initialRouteName: \"Question\",\n      children: [_jsxDEV(Stack.Screen, {\n        name: \"Question\",\n        children: function children(props) {\n          return _jsxDEV(Question, _objectSpread(_objectSpread({}, props), {}, {\n            questions: questions\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 21\n          }, _this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), _jsxDEV(Stack.Screen, {\n        name: \"Summary\",\n        component: Summary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"names":["React","NavigationContainer","createStackNavigator","Question","Summary","jsxDEV","_jsxDEV","Stack","questions","prompt","type","choices","correct","App","_this","children","Navigator","initialRouteName","Screen","name","props","_objectSpread","fileName","_jsxFileName","lineNumber","columnNumber","component"],"sources":["/Users/emme/Documents/Lab 9 React/exercise-app-demo/unit2/lab10/src/App.js"],"sourcesContent":["\nimport React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport Question from './components/Questions';\nimport Summary from './components/Summary';\n\nconst Stack = createStackNavigator();\n\nconst questions = [\n  {\n    prompt: \"This is the first question...\",\n    type: \"true-false\",\n    choices: [\"True\", \"False\"],\n    correct: 0 // The correct answer is \"True\"\n  },\n  {\n    prompt: \"This is the second question...\",\n    type: \"multiple-choice\",\n    choices: [\"Choice 1\", \"Choice 2\", \"Choice 3\"],\n    correct: 1 // The correct answer is \"Choice 2\"\n  },\n  {\n    prompt: \"This is the third question...\",\n    type: \"multiple-answer\",\n    choices: [\"Choice 1\", \"Choice 2\", \"Choice 3\"],\n    correct: [0, 2] // The correct answers are \"Choice 1\" and \"Choice 3\"\n  }\n];\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator initialRouteName=\"Question\">\n        <Stack.Screen name=\"Question\">\n          {props => <Question {...props} questions={questions} />}\n        </Stack.Screen>\n        <Stack.Screen name=\"Summary\" component={Summary} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}"],"mappings":";;;;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,oBAAoB,QAAQ,yBAAyB;AAC9D,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,OAAO,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,IAAMC,KAAK,GAAGL,oBAAoB,CAAC,CAAC;AAEpC,IAAMM,SAAS,GAAG,CAChB;EACEC,MAAM,EAAE,+BAA+B;EACvCC,IAAI,EAAE,YAAY;EAClBC,OAAO,EAAE,CAAC,MAAM,EAAE,OAAO,CAAC;EAC1BC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,MAAM,EAAE,gCAAgC;EACxCC,IAAI,EAAE,iBAAiB;EACvBC,OAAO,EAAE,CAAC,UAAU,EAAE,UAAU,EAAE,UAAU,CAAC;EAC7CC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,MAAM,EAAE,+BAA+B;EACvCC,IAAI,EAAE,iBAAiB;EACvBC,OAAO,EAAE,CAAC,UAAU,EAAE,UAAU,EAAE,UAAU,CAAC;EAC7CC,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC;AAChB,CAAC,CACF;AAED,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAA,IAAAC,KAAA;EAC5B,OACER,OAAA,CAACL,mBAAmB;IAAAc,QAAA,EAClBT,OAAA,CAACC,KAAK,CAACS,SAAS;MAACC,gBAAgB,EAAC,UAAU;MAAAF,QAAA,GAC1CT,OAAA,CAACC,KAAK,CAACW,MAAM;QAACC,IAAI,EAAC,UAAU;QAAAJ,QAAA,EAC1B,SAAAA,SAAAK,KAAK;UAAA,OAAId,OAAA,CAACH,QAAQ,EAAAkB,aAAA,CAAAA,aAAA,KAAKD,KAAK;YAAEZ,SAAS,EAAEA;UAAU;YAAAc,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,GAAAX,KAAE,CAAC;QAAA;MAAA;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C,CAAC,EACfnB,OAAA,CAACC,KAAK,CAACW,MAAM;QAACC,IAAI,EAAC,SAAS;QAACO,SAAS,EAAEtB;MAAQ;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAE1B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}